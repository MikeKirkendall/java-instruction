package ui;

import java.util.ArrayList;
import java.util.List;

import business.Contact;
import business.TestContact;
import util.Console;

public class ContactManagerApp {

	public static void main(String[] args) {
		System.out.println("Welcome to the Customer Manager App");
		int command = 0;
		List<Contact> contacts = new ArrayList<>();
		contacts.add(new Contact("Mike Murach", null, "800-221-5528"));
		contacts.add(new Contact("Anne Boehm", null, null));
		contacts.add(new Contact("Joel Murach", "joel@murach.com", null));

		while (command != 9) {
			command = Console.getInt(getMenu(), 0, 10);
			switch (command) {
			case 1:
				// list contacts
				System.out.println("List all contacts:");
				for (Contact c : contacts) {
					System.out.println(c);
				}
				break;

			case 2:
				// list contacts w/ no phone #
				System.out.println("Contacts missing phone #:");
				List<Contact> contactsWithoutPhone = filterContactsWithoutPhoneNumbers(contacts);
				for (Contact c : contactsWithoutPhone) {
					System.out.println(c);
				}
				break;
			case 3:
				System.out.println("Contacts missing email:");
				List<Contact> contactsWithoutEmail = filterContactsWithoutPhoneNumbers(contacts);
				for (Contact c : contactsWithoutEmail) {
					System.out.println(c);
				}
				break;
			case 4: 
				// Lambda: list contacts w/no phone #
				System.out.println("Contacts missing phone #:");
				contactsWithoutPhone = filterContacts(contacts,
									c -> c.getPhone()== null);
				for (Contact c : contactsWithoutPhone) {
					System.out.println(c);
				}
				break;
				
			case 5: 
				// Lambda: list contacts w/no email #
				System.out.println("Contacts missing email:");
				contactsWithoutEmail = filterContacts(contacts,
									c -> c.getEmail()== null);
				for (Contact c : contactsWithoutEmail) {
					System.out.println(c);
				}
				break;

			}
		}

		System.out.println("Goodbye");

	}

	private static String getMenu() {
		String menu = "COMMAND MENU:\n" + 
						"1 - List Contacts\n" + 
						"2 - List Contacts with No phone number\n" + 
						"3 - List contacts with no email\n" + 
						"4 - Lambda: List Contacts with No Phone Number\n" + 
						"5 - Lamda: List Contacts with No Email Address\n"  +
						
						"9 - Exit\n" + "ENTER COMMAND\n";
		return menu;

	}

	public static List<Contact> filterContactsWithoutPhoneNumbers(List<Contact> contacts) {
		List<Contact> contactsWithoutPhone = new ArrayList<>();
		for (Contact c : contacts) {
			if (c.getPhone() == null) {
				contactsWithoutPhone.add(c);
			}
		}

		return contactsWithoutPhone;

	}

	public static List<Contact> filterContactsWithoutEmails(List<Contact> contacts) {
		List<Contact> contactsWithoutEmail = new ArrayList<>();
		for (Contact c : contacts) {
			if (c.getEmail() == null) {
				contactsWithoutEmail.add(c);
			}
		}
		return contactsWithoutEmail;
	}
	
	// make one method that can replace the above 2 methods
	public static List<Contact> filterContacts(List<Contact> contacts,
											TestContact condition){
		List<Contact> filteredContacts = new ArrayList<>();
		for (Contact c : contacts) {
			if (condition.test(c)) {
				filteredContacts.add(c);
			}
		}
		return filteredContacts;
	}

}

